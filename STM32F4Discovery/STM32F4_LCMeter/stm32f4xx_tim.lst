
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter\stm32f4xx_tim.o:     file format elf32-littlearm
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter\stm32f4xx_tim.o


Disassembly of section .text.TI1_Config:

00000000 <TI1_Config>:
TI1_Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3193
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
                       uint16_t TIM_ICFilter)
{
   0:	b430      	push	{r4, r5}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3197
  uint16_t tmpccmr1 = 0, tmpccer = 0;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	f024 0401 	bic.w	r4, r4, #1
   8:	ea4f 4404 	mov.w	r4, r4, lsl #16
   c:	ea4f 4414 	mov.w	r4, r4, lsr #16
  10:	8404      	strh	r4, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3198
  tmpccmr1 = TIMx->CCMR1;
  12:	8b04      	ldrh	r4, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3199
  tmpccer = TIMx->CCER;
  14:	8c05      	ldrh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3202

  /* Select the Input and set the filter */
  tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
  16:	f024 04f3 	bic.w	r4, r4, #243	; 0xf3
  1a:	ea4f 4404 	mov.w	r4, r4, lsl #16
  1e:	ea4f 4414 	mov.w	r4, r4, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3203
  tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  22:	ea42 0404 	orr.w	r4, r2, r4
  26:	ea44 1403 	orr.w	r4, r4, r3, lsl #4
  2a:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3206

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  2c:	f025 050a 	bic.w	r5, r5, #10
  30:	ea4f 4505 	mov.w	r5, r5, lsl #16
  34:	ea4f 4515 	mov.w	r5, r5, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3207
  tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
  38:	f045 0501 	orr.w	r5, r5, #1
  3c:	430d      	orrs	r5, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3210

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
  3e:	8304      	strh	r4, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3211
  TIMx->CCER = tmpccer;
  40:	8405      	strh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3212
}
  42:	bc30      	pop	{r4, r5}
  44:	4770      	bx	lr
  46:	bf00      	nop

Disassembly of section .text.TI2_Config:

00000000 <TI2_Config>:
TI2_Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3234
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
                       uint16_t TIM_ICFilter)
{
   0:	b430      	push	{r4, r5}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3238
  uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	f024 0410 	bic.w	r4, r4, #16
   8:	ea4f 4404 	mov.w	r4, r4, lsl #16
   c:	ea4f 4414 	mov.w	r4, r4, lsr #16
  10:	8404      	strh	r4, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3239
  tmpccmr1 = TIMx->CCMR1;
  12:	8b04      	ldrh	r4, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3240
  tmpccer = TIMx->CCER;
  14:	8c05      	ldrh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3244
  tmp = (uint16_t)(TIM_ICPolarity << 4);

  /* Select the Input and set the filter */
  tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
  16:	f424 7440 	bic.w	r4, r4, #768	; 0x300
  1a:	ea4f 5404 	mov.w	r4, r4, lsl #20
  1e:	ea4f 5414 	mov.w	r4, r4, lsr #20
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3245
  tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
  22:	ea44 2402 	orr.w	r4, r4, r2, lsl #8
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3246
  tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
  26:	ea44 3403 	orr.w	r4, r4, r3, lsl #12
  2a:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3249

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
  2c:	f025 05a0 	bic.w	r5, r5, #160	; 0xa0
  30:	ea4f 4505 	mov.w	r5, r5, lsl #16
  34:	ea4f 4515 	mov.w	r5, r5, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3250
  tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
  38:	f045 0510 	orr.w	r5, r5, #16
  3c:	ea45 1501 	orr.w	r5, r5, r1, lsl #4
  40:	b2ad      	uxth	r5, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3253

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
  42:	8304      	strh	r4, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3254
  TIMx->CCER = tmpccer;
  44:	8405      	strh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3255
}
  46:	bc30      	pop	{r4, r5}
  48:	4770      	bx	lr
  4a:	bf00      	nop

Disassembly of section .text.TIM_DeInit:

00000000 <TIM_DeInit>:
TIM_DeInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:195
  * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
  * @retval None

  */
void TIM_DeInit(TIM_TypeDef* TIMx)
{
   0:	b508      	push	{r3, lr}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:199
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 
  if (TIMx == TIM1)
   2:	f04f 0300 	mov.w	r3, #0
   6:	f2c4 0301 	movt	r3, #16385	; 0x4001
   a:	4298      	cmp	r0, r3
   c:	d10b      	bne.n	26 <TIM_DeInit+0x26>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:201
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
   e:	f04f 0001 	mov.w	r0, #1
  12:	4601      	mov	r1, r0
  14:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:202
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  18:	f04f 0001 	mov.w	r0, #1
  1c:	f04f 0100 	mov.w	r1, #0
  20:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
  24:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:204
  } 
  else if (TIMx == TIM2) 
  26:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  2a:	d10b      	bne.n	44 <TIM_DeInit+0x44>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:206
  {     
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  2c:	f04f 0001 	mov.w	r0, #1
  30:	4601      	mov	r1, r0
  32:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:207
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  36:	f04f 0001 	mov.w	r0, #1
  3a:	f04f 0100 	mov.w	r1, #0
  3e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  42:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:209
  }  
  else if (TIMx == TIM3)
  44:	f44f 6380 	mov.w	r3, #1024	; 0x400
  48:	f2c4 0300 	movt	r3, #16384	; 0x4000
  4c:	4298      	cmp	r0, r3
  4e:	d10c      	bne.n	6a <TIM_DeInit+0x6a>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:211
  { 
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  50:	f04f 0002 	mov.w	r0, #2
  54:	f04f 0101 	mov.w	r1, #1
  58:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:212
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  5c:	f04f 0002 	mov.w	r0, #2
  60:	f04f 0100 	mov.w	r1, #0
  64:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  68:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:214
  }  
  else if (TIMx == TIM4)
  6a:	f44f 6300 	mov.w	r3, #2048	; 0x800
  6e:	f2c4 0300 	movt	r3, #16384	; 0x4000
  72:	4298      	cmp	r0, r3
  74:	d10c      	bne.n	90 <TIM_DeInit+0x90>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:216
  { 
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  76:	f04f 0004 	mov.w	r0, #4
  7a:	f04f 0101 	mov.w	r1, #1
  7e:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:217
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
  82:	f04f 0004 	mov.w	r0, #4
  86:	f04f 0100 	mov.w	r1, #0
  8a:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  8e:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:219
  }  
  else if (TIMx == TIM5)
  90:	f44f 6340 	mov.w	r3, #3072	; 0xc00
  94:	f2c4 0300 	movt	r3, #16384	; 0x4000
  98:	4298      	cmp	r0, r3
  9a:	d10c      	bne.n	b6 <TIM_DeInit+0xb6>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:221
  {      
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
  9c:	f04f 0008 	mov.w	r0, #8
  a0:	f04f 0101 	mov.w	r1, #1
  a4:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:222
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
  a8:	f04f 0008 	mov.w	r0, #8
  ac:	f04f 0100 	mov.w	r1, #0
  b0:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  b4:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:224
  }  
  else if (TIMx == TIM6)  
  b6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  ba:	f2c4 0300 	movt	r3, #16384	; 0x4000
  be:	4298      	cmp	r0, r3
  c0:	d10c      	bne.n	dc <TIM_DeInit+0xdc>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:226
  {    
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
  c2:	f04f 0010 	mov.w	r0, #16
  c6:	f04f 0101 	mov.w	r1, #1
  ca:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:227
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
  ce:	f04f 0010 	mov.w	r0, #16
  d2:	f04f 0100 	mov.w	r1, #0
  d6:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
  da:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:229
  }  
  else if (TIMx == TIM7)
  dc:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
  e0:	f2c4 0300 	movt	r3, #16384	; 0x4000
  e4:	4298      	cmp	r0, r3
  e6:	d10c      	bne.n	102 <TIM_DeInit+0x102>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:231
  {      
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
  e8:	f04f 0020 	mov.w	r0, #32
  ec:	f04f 0101 	mov.w	r1, #1
  f0:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:232
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
  f4:	f04f 0020 	mov.w	r0, #32
  f8:	f04f 0100 	mov.w	r1, #0
  fc:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
 100:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:234
  }  
  else if (TIMx == TIM8)
 102:	f44f 6380 	mov.w	r3, #1024	; 0x400
 106:	f2c4 0301 	movt	r3, #16385	; 0x4001
 10a:	4298      	cmp	r0, r3
 10c:	d10c      	bne.n	128 <TIM_DeInit+0x128>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:236
  {      
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 10e:	f04f 0002 	mov.w	r0, #2
 112:	f04f 0101 	mov.w	r1, #1
 116:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:237
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 11a:	f04f 0002 	mov.w	r0, #2
 11e:	f04f 0100 	mov.w	r1, #0
 122:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
 126:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:239
  }  
  else if (TIMx == TIM9)
 128:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 12c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 130:	4298      	cmp	r0, r3
 132:	d10c      	bne.n	14e <TIM_DeInit+0x14e>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:241
  {      
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 134:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 138:	f04f 0101 	mov.w	r1, #1
 13c:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:242
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 140:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 144:	f04f 0100 	mov.w	r1, #0
 148:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
 14c:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:244
   }  
  else if (TIMx == TIM10)
 14e:	f44f 4388 	mov.w	r3, #17408	; 0x4400
 152:	f2c4 0301 	movt	r3, #16385	; 0x4001
 156:	4298      	cmp	r0, r3
 158:	d10c      	bne.n	174 <TIM_DeInit+0x174>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:246
  {      
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 15a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 15e:	f04f 0101 	mov.w	r1, #1
 162:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:247
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 166:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 16a:	f04f 0100 	mov.w	r1, #0
 16e:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
 172:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:249
  }  
  else if (TIMx == TIM11) 
 174:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 178:	f2c4 0301 	movt	r3, #16385	; 0x4001
 17c:	4298      	cmp	r0, r3
 17e:	d10c      	bne.n	19a <TIM_DeInit+0x19a>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:251
  {     
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 180:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 184:	f04f 0101 	mov.w	r1, #1
 188:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:252
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 18c:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 190:	f04f 0100 	mov.w	r1, #0
 194:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
 198:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:254
  }  
  else if (TIMx == TIM12)
 19a:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 19e:	f2c4 0300 	movt	r3, #16384	; 0x4000
 1a2:	4298      	cmp	r0, r3
 1a4:	d10c      	bne.n	1c0 <TIM_DeInit+0x1c0>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:256
  {      
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 1a6:	f04f 0040 	mov.w	r0, #64	; 0x40
 1aa:	f04f 0101 	mov.w	r1, #1
 1ae:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:257
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 1b2:	f04f 0040 	mov.w	r0, #64	; 0x40
 1b6:	f04f 0100 	mov.w	r1, #0
 1ba:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
 1be:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:259
  }  
  else if (TIMx == TIM13) 
 1c0:	f44f 53e0 	mov.w	r3, #7168	; 0x1c00
 1c4:	f2c4 0300 	movt	r3, #16384	; 0x4000
 1c8:	4298      	cmp	r0, r3
 1ca:	d10c      	bne.n	1e6 <TIM_DeInit+0x1e6>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:261
  {       
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 1cc:	f04f 0080 	mov.w	r0, #128	; 0x80
 1d0:	f04f 0101 	mov.w	r1, #1
 1d4:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:262
    RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 1d8:	f04f 0080 	mov.w	r0, #128	; 0x80
 1dc:	f04f 0100 	mov.w	r1, #0
 1e0:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
 1e4:	bd08      	pop	{r3, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:266
  }  
  else
  { 
    if (TIMx == TIM14) 
 1e6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 1ea:	f2c4 0300 	movt	r3, #16384	; 0x4000
 1ee:	4298      	cmp	r0, r3
 1f0:	d10b      	bne.n	20a <TIM_DeInit+0x20a>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:268
    {     
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 1f2:	f44f 7080 	mov.w	r0, #256	; 0x100
 1f6:	f04f 0101 	mov.w	r1, #1
 1fa:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:269
      RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 1fe:	f44f 7080 	mov.w	r0, #256	; 0x100
 202:	f04f 0100 	mov.w	r1, #0
 206:	f7ff fffe 	bl	0 <RCC_APB1PeriphResetCmd>
 20a:	bd08      	pop	{r3, pc}

Disassembly of section .text.TIM_TimeBaseInit:

00000000 <TIM_TimeBaseInit>:
TIM_TimeBaseInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:283
  * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
  *         that contains the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
   0:	b430      	push	{r4, r5}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:291
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
  assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
  assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));

  tmpcr1 = TIMx->CR1;  
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:293

  if((TIMx == TIM1) || (TIMx == TIM8)||
   6:	f04f 0200 	mov.w	r2, #0
   a:	f2c4 0201 	movt	r2, #16385	; 0x4001
   e:	f44f 6480 	mov.w	r4, #1024	; 0x400
  12:	f2c4 0401 	movt	r4, #16385	; 0x4001
  16:	42a0      	cmp	r0, r4
  18:	bf14      	ite	ne
  1a:	2400      	movne	r4, #0
  1c:	2401      	moveq	r4, #1
  1e:	4290      	cmp	r0, r2
  20:	bf08      	it	eq
  22:	f044 0401 	orreq.w	r4, r4, #1
  26:	b9fc      	cbnz	r4, 68 <TIM_TimeBaseInit+0x68>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:294
     (TIMx == TIM2) || (TIMx == TIM3)||
  28:	f44f 6280 	mov.w	r2, #1024	; 0x400
  2c:	f2c4 0200 	movt	r2, #16384	; 0x4000
  30:	4290      	cmp	r0, r2
  32:	bf14      	ite	ne
  34:	2200      	movne	r2, #0
  36:	2201      	moveq	r2, #1
  38:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
  3c:	bf08      	it	eq
  3e:	f042 0201 	orreq.w	r2, r2, #1
  42:	b98a      	cbnz	r2, 68 <TIM_TimeBaseInit+0x68>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:295
     (TIMx == TIM4) || (TIMx == TIM5)) 
  44:	f44f 6200 	mov.w	r2, #2048	; 0x800
  48:	f2c4 0200 	movt	r2, #16384	; 0x4000
  4c:	f44f 6540 	mov.w	r5, #3072	; 0xc00
  50:	f2c4 0500 	movt	r5, #16384	; 0x4000
  54:	42a8      	cmp	r0, r5
  56:	bf14      	ite	ne
  58:	2500      	movne	r5, #0
  5a:	2501      	moveq	r5, #1
  5c:	4290      	cmp	r0, r2
  5e:	bf14      	ite	ne
  60:	462a      	movne	r2, r5
  62:	f045 0201 	orreq.w	r2, r5, #1
  66:	b132      	cbz	r2, 76 <TIM_TimeBaseInit+0x76>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:298
  {
    /* Select the Counter Mode */
    tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
  68:	f64f 728f 	movw	r2, #65423	; 0xff8f
  6c:	ea03 0202 	and.w	r2, r3, r2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:299
    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
  70:	884b      	ldrh	r3, [r1, #2]
  72:	ea42 0303 	orr.w	r3, r2, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:302
  }
 
  if((TIMx != TIM6) && (TIMx != TIM7))
  76:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  7a:	f2c4 0200 	movt	r2, #16384	; 0x4000
  7e:	f44f 55a0 	mov.w	r5, #5120	; 0x1400
  82:	f2c4 0500 	movt	r5, #16384	; 0x4000
  86:	1b45      	subs	r5, r0, r5
  88:	bf18      	it	ne
  8a:	2501      	movne	r5, #1
  8c:	4290      	cmp	r0, r2
  8e:	bf0c      	ite	eq
  90:	2200      	moveq	r2, #0
  92:	f005 0201 	andne.w	r2, r5, #1
  96:	b132      	cbz	r2, a6 <TIM_TimeBaseInit+0xa6>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:305
  {
    /* Set the clock division */
    tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
  98:	f64f 42ff 	movw	r2, #64767	; 0xfcff
  9c:	ea03 0202 	and.w	r2, r3, r2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:306
    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
  a0:	890b      	ldrh	r3, [r1, #8]
  a2:	ea42 0303 	orr.w	r3, r2, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:309
  }

  TIMx->CR1 = tmpcr1;
  a6:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:312

  /* Set the Autoreload value */
  TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
  a8:	684b      	ldr	r3, [r1, #4]
  aa:	62c3      	str	r3, [r0, #44]	; 0x2c
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:315
 
  /* Set the Prescaler value */
  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
  ac:	880b      	ldrh	r3, [r1, #0]
  ae:	8503      	strh	r3, [r0, #40]	; 0x28
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:317
    
  if ((TIMx == TIM1) || (TIMx == TIM8))  
  b0:	b10c      	cbz	r4, b6 <TIM_TimeBaseInit+0xb6>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:320
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
  b2:	7a8b      	ldrb	r3, [r1, #10]
  b4:	8603      	strh	r3, [r0, #48]	; 0x30
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:325
  }

  /* Generate an update event to reload the Prescaler 
     and the repetition counter(only for TIM1 and TIM8) value immediatly */
  TIMx->EGR = TIM_PSCReloadMode_Immediate;          
  b6:	f04f 0301 	mov.w	r3, #1
  ba:	8283      	strh	r3, [r0, #20]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:326
}
  bc:	bc30      	pop	{r4, r5}
  be:	4770      	bx	lr

Disassembly of section .text.TIM_TimeBaseStructInit:

00000000 <TIM_TimeBaseStructInit>:
TIM_TimeBaseStructInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:337
  * @retval None
  */
void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
  /* Set the default configuration */
  TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
   0:	f04f 33ff 	mov.w	r3, #4294967295
   4:	6043      	str	r3, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:338
  TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
   6:	f04f 0300 	mov.w	r3, #0
   a:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:339
  TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
   c:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:340
  TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
   e:	8043      	strh	r3, [r0, #2]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:341
  TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
  10:	7283      	strb	r3, [r0, #10]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:342
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_PrescalerConfig:

00000000 <TIM_PrescalerConfig>:
TIM_PrescalerConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:360
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
  /* Set the Prescaler value */
  TIMx->PSC = Prescaler;
   0:	8501      	strh	r1, [r0, #40]	; 0x28
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:362
  /* Set or reset the UG Bit */
  TIMx->EGR = TIM_PSCReloadMode;
   2:	8282      	strh	r2, [r0, #20]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:363
}
   4:	4770      	bx	lr
   6:	bf00      	nop

Disassembly of section .text.TIM_CounterModeConfig:

00000000 <TIM_CounterModeConfig>:
TIM_CounterModeConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:385

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));

  tmpcr1 = TIMx->CR1;
   0:	8803      	ldrh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:388

  /* Reset the CMS and DIR Bits */
  tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:391

  /* Set the Counter Mode */
  tmpcr1 |= TIM_CounterMode;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:394

  /* Write to TIMx CR1 register */
  TIMx->CR1 = tmpcr1;
  12:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:395
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_SetCounter:

00000000 <TIM_SetCounter>:
TIM_SetCounter():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:409
{
  /* Check the parameters */
   assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Set the Counter Register value */
  TIMx->CNT = Counter;
   0:	6241      	str	r1, [r0, #36]	; 0x24
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:410
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetAutoreload:

00000000 <TIM_SetAutoreload>:
TIM_SetAutoreload():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:424
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  
  /* Set the Autoreload Register value */
  TIMx->ARR = Autoreload;
   0:	62c1      	str	r1, [r0, #44]	; 0x2c
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:425
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetCounter:

00000000 <TIM_GetCounter>:
TIM_GetCounter():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:438
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Get the Counter Register value */
  return TIMx->CNT;
   0:	6a40      	ldr	r0, [r0, #36]	; 0x24
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:439
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetPrescaler:

00000000 <TIM_GetPrescaler>:
TIM_GetPrescaler():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:452
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Get the Prescaler Register value */
  return TIMx->PSC;
   0:	8d00      	ldrh	r0, [r0, #40]	; 0x28
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:453
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr
   6:	bf00      	nop

Disassembly of section .text.TIM_UpdateDisableConfig:

00000000 <TIM_UpdateDisableConfig>:
TIM_UpdateDisableConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:468
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_UpdateDisableConfig+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:471
  {
    /* Set the Update Disable Bit */
    TIMx->CR1 |= TIM_CR1_UDIS;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0302 	orr.w	r3, r3, #2
   a:	8003      	strh	r3, [r0, #0]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:476
  }
  else
  {
    /* Reset the Update Disable Bit */
    TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
   e:	8803      	ldrh	r3, [r0, #0]
  10:	f023 0302 	bic.w	r3, r3, #2
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8003      	strh	r3, [r0, #0]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_UpdateRequestConfig:

00000000 <TIM_UpdateRequestConfig>:
TIM_UpdateRequestConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:497
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));

  if (TIM_UpdateSource != TIM_UpdateSource_Global)
   0:	b129      	cbz	r1, e <TIM_UpdateRequestConfig+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:500
  {
    /* Set the URS Bit */
    TIMx->CR1 |= TIM_CR1_URS;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0304 	orr.w	r3, r3, #4
   a:	8003      	strh	r3, [r0, #0]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:505
  }
  else
  {
    /* Reset the URS Bit */
    TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
   e:	8803      	ldrh	r3, [r0, #0]
  10:	f023 0304 	bic.w	r3, r3, #4
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8003      	strh	r3, [r0, #0]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_ARRPreloadConfig:

00000000 <TIM_ARRPreloadConfig>:
TIM_ARRPreloadConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:522
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_ARRPreloadConfig+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:525
  {
    /* Set the ARR Preload Bit */
    TIMx->CR1 |= TIM_CR1_ARPE;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   a:	8003      	strh	r3, [r0, #0]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:530
  }
  else
  {
    /* Reset the ARR Preload Bit */
    TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
   e:	8803      	ldrh	r3, [r0, #0]
  10:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8003      	strh	r3, [r0, #0]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_SelectOnePulseMode:

00000000 <TIM_SelectOnePulseMode>:
TIM_SelectOnePulseMode():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:550
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_OPM_MODE(TIM_OPMode));

  /* Reset the OPM Bit */
  TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
   0:	8803      	ldrh	r3, [r0, #0]
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:553

  /* Configure the OPM Mode */
  TIMx->CR1 |= TIM_OPMode;
  10:	8803      	ldrh	r3, [r0, #0]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:554
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_SetClockDivision:

00000000 <TIM_SetClockDivision>:
TIM_SetClockDivision():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:573
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_CKD_DIV(TIM_CKD));

  /* Reset the CKD Bits */
  TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
   0:	8803      	ldrh	r3, [r0, #0]
   2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:576

  /* Set the CKD value */
  TIMx->CR1 |= TIM_CKD;
  10:	8803      	ldrh	r3, [r0, #0]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:577
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_Cmd:

00000000 <TIM_Cmd>:
TIM_Cmd():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:592
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_Cmd+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:595
  {
    /* Enable the TIM Counter */
    TIMx->CR1 |= TIM_CR1_CEN;
   2:	8803      	ldrh	r3, [r0, #0]
   4:	b29b      	uxth	r3, r3
   6:	f043 0301 	orr.w	r3, r3, #1
   a:	8003      	strh	r3, [r0, #0]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:600
  }
  else
  {
    /* Disable the TIM Counter */
    TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
   e:	8803      	ldrh	r3, [r0, #0]
  10:	f023 0301 	bic.w	r3, r3, #1
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8003      	strh	r3, [r0, #0]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_OC1Init:

00000000 <TIM_OC1Init>:
TIM_OC1Init():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:666
  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   0:	b470      	push	{r4, r5, r6}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:676
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
   2:	8c03      	ldrh	r3, [r0, #32]
   4:	f023 0301 	bic.w	r3, r3, #1
   8:	ea4f 4303 	mov.w	r3, r3, lsl #16
   c:	ea4f 4313 	mov.w	r3, r3, lsr #16
  10:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:679
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
  12:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:681
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  14:	8884      	ldrh	r4, [r0, #4]
  16:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:684
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
  18:	8b02      	ldrh	r2, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:688
    
  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
  tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
  1a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  1e:	ea4f 4202 	mov.w	r2, r2, lsl #16
  22:	ea4f 4212 	mov.w	r2, r2, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:690
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  26:	880d      	ldrh	r5, [r1, #0]
  28:	432a      	orrs	r2, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:693
  
  /* Reset the Output Polarity level */
  tmpccer &= (uint16_t)~TIM_CCER_CC1P;
  2a:	f023 0302 	bic.w	r3, r3, #2
  2e:	ea4f 4303 	mov.w	r3, r3, lsl #16
  32:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:695
  /* Set the Output Compare Polarity */
  tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
  36:	884e      	ldrh	r6, [r1, #2]
  38:	898d      	ldrh	r5, [r1, #12]
  3a:	ea46 0505 	orr.w	r5, r6, r5
  3e:	b2ad      	uxth	r5, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:698
  
  /* Set the Output State */
  tmpccer |= TIM_OCInitStruct->TIM_OutputState;
  40:	ea45 0303 	orr.w	r3, r5, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:700
    
  if((TIMx == TIM1) || (TIMx == TIM8))
  44:	f04f 0500 	mov.w	r5, #0
  48:	f2c4 0501 	movt	r5, #16385	; 0x4001
  4c:	f44f 6680 	mov.w	r6, #1024	; 0x400
  50:	f2c4 0601 	movt	r6, #16385	; 0x4001
  54:	42b0      	cmp	r0, r6
  56:	bf14      	ite	ne
  58:	2600      	movne	r6, #0
  5a:	2601      	moveq	r6, #1
  5c:	42a8      	cmp	r0, r5
  5e:	bf14      	ite	ne
  60:	4635      	movne	r5, r6
  62:	f046 0501 	orreq.w	r5, r6, #1
  66:	b1ad      	cbz	r5, 94 <TIM_OC1Init+0x94>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:708
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
  68:	f64f 75f7 	movw	r5, #65527	; 0xfff7
  6c:	ea03 0505 	and.w	r5, r3, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:710
    /* Set the Output N Polarity */
    tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
  70:	89cb      	ldrh	r3, [r1, #14]
  72:	431d      	orrs	r5, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:712
    /* Reset the Output N State */
    tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
  74:	f64f 73fb 	movw	r3, #65531	; 0xfffb
  78:	ea05 0303 	and.w	r3, r5, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:715
    
    /* Set the Output N State */
    tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
  7c:	888d      	ldrh	r5, [r1, #4]
  7e:	432b      	orrs	r3, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:718
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
  80:	f64f 45ff 	movw	r5, #64767	; 0xfcff
  84:	ea04 0505 	and.w	r5, r4, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:720
    /* Set the Output Idle state */
    tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
  88:	8a4e      	ldrh	r6, [r1, #18]
  8a:	8a0c      	ldrh	r4, [r1, #16]
  8c:	ea46 0404 	orr.w	r4, r6, r4
  90:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:722
    /* Set the Output N Idle state */
    tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
  92:	432c      	orrs	r4, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:725
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  94:	8084      	strh	r4, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:728
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  96:	8302      	strh	r2, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:731
  
  /* Set the Capture Compare Register value */
  TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
  98:	688a      	ldr	r2, [r1, #8]
  9a:	6342      	str	r2, [r0, #52]	; 0x34
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:734
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  9c:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:735
}
  9e:	bc70      	pop	{r4, r5, r6}
  a0:	4770      	bx	lr
  a2:	bf00      	nop

Disassembly of section .text.TIM_OC2Init:

00000000 <TIM_OC2Init>:
TIM_OC2Init():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:747
  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   0:	b470      	push	{r4, r5, r6}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:757
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
   2:	8c03      	ldrh	r3, [r0, #32]
   4:	f023 0310 	bic.w	r3, r3, #16
   8:	ea4f 4303 	mov.w	r3, r3, lsl #16
   c:	ea4f 4313 	mov.w	r3, r3, lsr #16
  10:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:760
  
  /* Get the TIMx CCER register value */  
  tmpccer = TIMx->CCER;
  12:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:762
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  14:	8884      	ldrh	r4, [r0, #4]
  16:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:765
  
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
  18:	8b02      	ldrh	r2, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:769
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
  tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
  1a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  1e:	ea4f 4202 	mov.w	r2, r2, lsl #16
  22:	ea4f 4212 	mov.w	r2, r2, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:772
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
  26:	880d      	ldrh	r5, [r1, #0]
  28:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  2c:	b292      	uxth	r2, r2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:775
  
  /* Reset the Output Polarity level */
  tmpccer &= (uint16_t)~TIM_CCER_CC2P;
  2e:	f023 0320 	bic.w	r3, r3, #32
  32:	ea4f 4303 	mov.w	r3, r3, lsl #16
  36:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:777
  /* Set the Output Compare Polarity */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
  3a:	898d      	ldrh	r5, [r1, #12]
  3c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:780
  
  /* Set the Output State */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
  40:	884d      	ldrh	r5, [r1, #2]
  42:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  46:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:782
    
  if((TIMx == TIM1) || (TIMx == TIM8))
  48:	f04f 0500 	mov.w	r5, #0
  4c:	f2c4 0501 	movt	r5, #16385	; 0x4001
  50:	f44f 6680 	mov.w	r6, #1024	; 0x400
  54:	f2c4 0601 	movt	r6, #16385	; 0x4001
  58:	42b0      	cmp	r0, r6
  5a:	bf14      	ite	ne
  5c:	2600      	movne	r6, #0
  5e:	2601      	moveq	r6, #1
  60:	42a8      	cmp	r0, r5
  62:	bf14      	ite	ne
  64:	4635      	movne	r5, r6
  66:	f046 0501 	orreq.w	r5, r6, #1
  6a:	b1cd      	cbz	r5, a0 <TIM_OC2Init+0xa0>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:790
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
  6c:	f64f 757f 	movw	r5, #65407	; 0xff7f
  70:	ea03 0505 	and.w	r5, r3, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:792
    /* Set the Output N Polarity */
    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
  74:	89cb      	ldrh	r3, [r1, #14]
  76:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:794
    /* Reset the Output N State */
    tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
  7a:	f64f 73bf 	movw	r3, #65471	; 0xffbf
  7e:	ea05 0303 	and.w	r3, r5, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:797
    
    /* Set the Output N State */
    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
  82:	888d      	ldrh	r5, [r1, #4]
  84:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  88:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:800
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
  8a:	f24f 35ff 	movw	r5, #62463	; 0xf3ff
  8e:	ea04 0505 	and.w	r5, r4, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:802
    /* Set the Output Idle state */
    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
  92:	8a0c      	ldrh	r4, [r1, #16]
  94:	ea45 0584 	orr.w	r5, r5, r4, lsl #2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:804
    /* Set the Output N Idle state */
    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
  98:	8a4c      	ldrh	r4, [r1, #18]
  9a:	ea45 0484 	orr.w	r4, r5, r4, lsl #2
  9e:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:807
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  a0:	8084      	strh	r4, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:810
  
  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
  a2:	8302      	strh	r2, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:813
  
  /* Set the Capture Compare Register value */
  TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
  a4:	688a      	ldr	r2, [r1, #8]
  a6:	6382      	str	r2, [r0, #56]	; 0x38
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:816
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  a8:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:817
}
  aa:	bc70      	pop	{r4, r5, r6}
  ac:	4770      	bx	lr
  ae:	bf00      	nop

Disassembly of section .text.TIM_OC3Init:

00000000 <TIM_OC3Init>:
TIM_OC3Init():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:828
  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   0:	b470      	push	{r4, r5, r6}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:838
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
   2:	8c03      	ldrh	r3, [r0, #32]
   4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   8:	ea4f 4303 	mov.w	r3, r3, lsl #16
   c:	ea4f 4313 	mov.w	r3, r3, lsr #16
  10:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:841
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
  12:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:843
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  14:	8884      	ldrh	r4, [r0, #4]
  16:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:846
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
  18:	8b82      	ldrh	r2, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:850
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
  tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
  1a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  1e:	ea4f 4202 	mov.w	r2, r2, lsl #16
  22:	ea4f 4212 	mov.w	r2, r2, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:852
  /* Select the Output Compare Mode */
  tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
  26:	880d      	ldrh	r5, [r1, #0]
  28:	432a      	orrs	r2, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:855
  
  /* Reset the Output Polarity level */
  tmpccer &= (uint16_t)~TIM_CCER_CC3P;
  2a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  2e:	ea4f 4303 	mov.w	r3, r3, lsl #16
  32:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:857
  /* Set the Output Compare Polarity */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
  36:	898d      	ldrh	r5, [r1, #12]
  38:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:860
  
  /* Set the Output State */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
  3c:	884d      	ldrh	r5, [r1, #2]
  3e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  42:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:862
    
  if((TIMx == TIM1) || (TIMx == TIM8))
  44:	f04f 0500 	mov.w	r5, #0
  48:	f2c4 0501 	movt	r5, #16385	; 0x4001
  4c:	f44f 6680 	mov.w	r6, #1024	; 0x400
  50:	f2c4 0601 	movt	r6, #16385	; 0x4001
  54:	42b0      	cmp	r0, r6
  56:	bf14      	ite	ne
  58:	2600      	movne	r6, #0
  5a:	2601      	moveq	r6, #1
  5c:	42a8      	cmp	r0, r5
  5e:	bf14      	ite	ne
  60:	4635      	movne	r5, r6
  62:	f046 0501 	orreq.w	r5, r6, #1
  66:	b1cd      	cbz	r5, 9c <TIM_OC3Init+0x9c>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:870
    assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
    assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    
    /* Reset the Output N Polarity level */
    tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
  68:	f24f 75ff 	movw	r5, #63487	; 0xf7ff
  6c:	ea03 0505 	and.w	r5, r3, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:872
    /* Set the Output N Polarity */
    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
  70:	89cb      	ldrh	r3, [r1, #14]
  72:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:874
    /* Reset the Output N State */
    tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
  76:	f64f 33ff 	movw	r3, #64511	; 0xfbff
  7a:	ea05 0303 	and.w	r3, r5, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:877
    
    /* Set the Output N State */
    tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
  7e:	888d      	ldrh	r5, [r1, #4]
  80:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
  84:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:880
    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
    tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
  86:	f64c 75ff 	movw	r5, #53247	; 0xcfff
  8a:	ea04 0505 	and.w	r5, r4, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:882
    /* Set the Output Idle state */
    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
  8e:	8a0c      	ldrh	r4, [r1, #16]
  90:	ea45 1504 	orr.w	r5, r5, r4, lsl #4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:884
    /* Set the Output N Idle state */
    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
  94:	8a4c      	ldrh	r4, [r1, #18]
  96:	ea45 1404 	orr.w	r4, r5, r4, lsl #4
  9a:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:887
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  9c:	8084      	strh	r4, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:890
  
  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
  9e:	8382      	strh	r2, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:893
  
  /* Set the Capture Compare Register value */
  TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
  a0:	688a      	ldr	r2, [r1, #8]
  a2:	63c2      	str	r2, [r0, #60]	; 0x3c
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:896
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  a4:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:897
}
  a6:	bc70      	pop	{r4, r5, r6}
  a8:	4770      	bx	lr
  aa:	bf00      	nop

Disassembly of section .text.TIM_OC4Init:

00000000 <TIM_OC4Init>:
TIM_OC4Init():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:908
  * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
{
   0:	b470      	push	{r4, r5, r6}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:918
  assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
  assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
   2:	8c03      	ldrh	r3, [r0, #32]
   4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
   8:	ea4f 4303 	mov.w	r3, r3, lsl #16
   c:	ea4f 4313 	mov.w	r3, r3, lsr #16
  10:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:921
  
  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
  12:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:923
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
  14:	8884      	ldrh	r4, [r0, #4]
  16:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:926
  
  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
  18:	8b82      	ldrh	r2, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:930
    
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
  tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
  1a:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  1e:	ea4f 4202 	mov.w	r2, r2, lsl #16
  22:	ea4f 4212 	mov.w	r2, r2, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:933
  
  /* Select the Output Compare Mode */
  tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
  26:	880d      	ldrh	r5, [r1, #0]
  28:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  2c:	b292      	uxth	r2, r2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:936
  
  /* Reset the Output Polarity level */
  tmpccer &= (uint16_t)~TIM_CCER_CC4P;
  2e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  32:	ea4f 4303 	mov.w	r3, r3, lsl #16
  36:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:938
  /* Set the Output Compare Polarity */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
  3a:	898d      	ldrh	r5, [r1, #12]
  3c:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:941
  
  /* Set the Output State */
  tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
  40:	884d      	ldrh	r5, [r1, #2]
  42:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
  46:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:943
  
  if((TIMx == TIM1) || (TIMx == TIM8))
  48:	f04f 0500 	mov.w	r5, #0
  4c:	f2c4 0501 	movt	r5, #16385	; 0x4001
  50:	f44f 6680 	mov.w	r6, #1024	; 0x400
  54:	f2c4 0601 	movt	r6, #16385	; 0x4001
  58:	42b0      	cmp	r0, r6
  5a:	bf14      	ite	ne
  5c:	2600      	movne	r6, #0
  5e:	2601      	moveq	r6, #1
  60:	42a8      	cmp	r0, r5
  62:	bf14      	ite	ne
  64:	4635      	movne	r5, r6
  66:	f046 0501 	orreq.w	r5, r6, #1
  6a:	b13d      	cbz	r5, 7c <TIM_OC4Init+0x7c>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:947
  {
    assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
    /* Reset the Output Compare IDLE State */
    tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
  6c:	f64b 75ff 	movw	r5, #49151	; 0xbfff
  70:	ea04 0505 	and.w	r5, r4, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:949
    /* Set the Output Idle state */
    tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
  74:	8a0c      	ldrh	r4, [r1, #16]
  76:	ea45 1484 	orr.w	r4, r5, r4, lsl #6
  7a:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:952
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
  7c:	8084      	strh	r4, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:955
  
  /* Write to TIMx CCMR2 */  
  TIMx->CCMR2 = tmpccmrx;
  7e:	8382      	strh	r2, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:958
    
  /* Set the Capture Compare Register value */
  TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
  80:	688a      	ldr	r2, [r1, #8]
  82:	6402      	str	r2, [r0, #64]	; 0x40
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:961
  
  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  84:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:962
}
  86:	bc70      	pop	{r4, r5, r6}
  88:	4770      	bx	lr
  8a:	bf00      	nop

Disassembly of section .text.TIM_OCStructInit:

00000000 <TIM_OCStructInit>:
TIM_OCStructInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:973
  * @retval None
  */
void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
{
  /* Set the default configuration */
  TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
   0:	f04f 0300 	mov.w	r3, #0
   4:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:974
  TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
   6:	8043      	strh	r3, [r0, #2]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:975
  TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
   8:	8083      	strh	r3, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:976
  TIM_OCInitStruct->TIM_Pulse = 0x00000000;
   a:	6083      	str	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:977
  TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
   c:	8183      	strh	r3, [r0, #12]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:978
  TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
   e:	81c3      	strh	r3, [r0, #14]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:979
  TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
  10:	8203      	strh	r3, [r0, #16]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:980
  TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
  12:	8243      	strh	r3, [r0, #18]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:981
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_SelectOCxM:

00000000 <TIM_SelectOCxM>:
TIM_SelectOCxM():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1007
  *            @arg TIM_ForcedAction_Active
  *            @arg TIM_ForcedAction_InActive
  * @retval None
  */
void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
{
   0:	b430      	push	{r4, r5}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1017
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_OCM(TIM_OCMode));

  tmp = (uint32_t) TIMx;
  tmp += CCMR_OFFSET;
   2:	f100 0318 	add.w	r3, r0, #24
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1022

  tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;

  /* Disable the Channel: Reset the CCxE Bit */
  TIMx->CCER &= (uint16_t) ~tmp1;
   6:	8c05      	ldrh	r5, [r0, #32]
   8:	b2ad      	uxth	r5, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1019
  assert_param(IS_TIM_OCM(TIM_OCMode));

  tmp = (uint32_t) TIMx;
  tmp += CCMR_OFFSET;

  tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
   a:	f04f 0401 	mov.w	r4, #1
   e:	fa04 f401 	lsl.w	r4, r4, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1022

  /* Disable the Channel: Reset the CCxE Bit */
  TIMx->CCER &= (uint16_t) ~tmp1;
  12:	ea25 0404 	bic.w	r4, r5, r4
  16:	8404      	strh	r4, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1024

  if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
  18:	2908      	cmp	r1, #8
  1a:	bf14      	ite	ne
  1c:	2000      	movne	r0, #0
  1e:	2001      	moveq	r0, #1
  20:	2900      	cmp	r1, #0
  22:	bf08      	it	eq
  24:	f040 0001 	orreq.w	r0, r0, #1
  28:	b160      	cbz	r0, 44 <TIM_SelectOCxM+0x44>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1026
  {
    tmp += (TIM_Channel>>1);
  2a:	ea4f 0151 	mov.w	r1, r1, lsr #1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1029

    /* Reset the OCxM bits in the CCMRx register */
    *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
  2e:	58cc      	ldr	r4, [r1, r3]
  30:	f64f 708f 	movw	r0, #65423	; 0xff8f
  34:	ea04 0000 	and.w	r0, r4, r0
  38:	50c8      	str	r0, [r1, r3]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1032
   
    /* Configure the OCxM bits in the CCMRx register */
    *(__IO uint32_t *) tmp |= TIM_OCMode;
  3a:	58c8      	ldr	r0, [r1, r3]
  3c:	ea40 0202 	orr.w	r2, r0, r2
  40:	50ca      	str	r2, [r1, r3]
  42:	e010      	b.n	66 <TIM_SelectOCxM+0x66>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1036
  }
  else
  {
    tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
  44:	f1a1 0104 	sub.w	r1, r1, #4
  48:	f3c1 014e 	ubfx	r1, r1, #1, #15
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1039

    /* Reset the OCxM bits in the CCMRx register */
    *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
  4c:	58cc      	ldr	r4, [r1, r3]
  4e:	f648 70ff 	movw	r0, #36863	; 0x8fff
  52:	ea04 0000 	and.w	r0, r4, r0
  56:	50c8      	str	r0, [r1, r3]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1042
    
    /* Configure the OCxM bits in the CCMRx register */
    *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
  58:	58c8      	ldr	r0, [r1, r3]
  5a:	ea4f 2202 	mov.w	r2, r2, lsl #8
  5e:	b292      	uxth	r2, r2
  60:	ea40 0202 	orr.w	r2, r0, r2
  64:	50ca      	str	r2, [r1, r3]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1044
  }
}
  66:	bc30      	pop	{r4, r5}
  68:	4770      	bx	lr
  6a:	bf00      	nop

Disassembly of section .text.TIM_SetCompare1:

00000000 <TIM_SetCompare1>:
TIM_SetCompare1():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1058
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));

  /* Set the Capture Compare1 Register value */
  TIMx->CCR1 = Compare1;
   0:	6341      	str	r1, [r0, #52]	; 0x34
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1059
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare2:

00000000 <TIM_SetCompare2>:
TIM_SetCompare2():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1074
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));

  /* Set the Capture Compare2 Register value */
  TIMx->CCR2 = Compare2;
   0:	6381      	str	r1, [r0, #56]	; 0x38
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1075
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare3:

00000000 <TIM_SetCompare3>:
TIM_SetCompare3():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1089
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));

  /* Set the Capture Compare3 Register value */
  TIMx->CCR3 = Compare3;
   0:	63c1      	str	r1, [r0, #60]	; 0x3c
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1090
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetCompare4:

00000000 <TIM_SetCompare4>:
TIM_SetCompare4():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1104
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));

  /* Set the Capture Compare4 Register value */
  TIMx->CCR4 = Compare4;
   0:	6401      	str	r1, [r0, #64]	; 0x40
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1105
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_ForcedOC1Config:

00000000 <TIM_ForcedOC1Config>:
TIM_ForcedOC1Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1123
  uint16_t tmpccmr1 = 0;

  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1126

  /* Reset the OC1M Bits */
  tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1129

  /* Configure The Forced output Mode */
  tmpccmr1 |= TIM_ForcedAction;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1132

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  12:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1133
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_ForcedOC2Config:

00000000 <TIM_ForcedOC2Config>:
TIM_ForcedOC2Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1152
  uint16_t tmpccmr1 = 0;

  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1155

  /* Reset the OC2M Bits */
  tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
   2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1158

  /* Configure The Forced output Mode */
  tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1161

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  14:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1162
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_ForcedOC3Config:

00000000 <TIM_ForcedOC3Config>:
TIM_ForcedOC3Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1181

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1184

  /* Reset the OC1M Bits */
  tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1187

  /* Configure The Forced output Mode */
  tmpccmr2 |= TIM_ForcedAction;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1190

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  12:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1191
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_ForcedOC4Config:

00000000 <TIM_ForcedOC4Config>:
TIM_ForcedOC4Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1209
  uint16_t tmpccmr2 = 0;

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1212

  /* Reset the OC2M Bits */
  tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
   2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1215

  /* Configure The Forced output Mode */
  tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1218

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  14:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1219
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC1PreloadConfig:

00000000 <TIM_OC1PreloadConfig>:
TIM_OC1PreloadConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1238

  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1241

  /* Reset the OC1PE Bit */
  tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1244

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr1 |= TIM_OCPreload;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1247

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  12:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1248
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC2PreloadConfig:

00000000 <TIM_OC2PreloadConfig>:
TIM_OC2PreloadConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1268

  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1271

  /* Reset the OC2PE Bit */
  tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1274

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1277

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  14:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1278
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC3PreloadConfig:

00000000 <TIM_OC3PreloadConfig>:
TIM_OC3PreloadConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1297

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1300

  /* Reset the OC3PE Bit */
  tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1303

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr2 |= TIM_OCPreload;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1306

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  12:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1307
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC4PreloadConfig:

00000000 <TIM_OC4PreloadConfig>:
TIM_OC4PreloadConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1326

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1329

  /* Reset the OC4PE Bit */
  tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1332

  /* Enable or Disable the Output Compare Preload feature */
  tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1335

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  14:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1336
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC1FastConfig:

00000000 <TIM_OC1FastConfig>:
TIM_OC1FastConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1356
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1359

  /* Reset the OC1FE Bit */
  tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
   2:	f023 0304 	bic.w	r3, r3, #4
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1362

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr1 |= TIM_OCFast;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1365

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
  12:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1366
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC2FastConfig:

00000000 <TIM_OC2FastConfig>:
TIM_OC2FastConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1387
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1390

  /* Reset the OC2FE Bit */
  tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
   2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1393

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1396

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
  14:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1397
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC3FastConfig:

00000000 <TIM_OC3FastConfig>:
TIM_OC3FastConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1417
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1420

  /* Reset the OC3FE Bit */
  tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
   2:	f023 0304 	bic.w	r3, r3, #4
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1423

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr2 |= TIM_OCFast;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1426

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmr2;
  12:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1427
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC4FastConfig:

00000000 <TIM_OC4FastConfig>:
TIM_OC4FastConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1447
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));

  /* Get the TIMx CCMR2 register value */
  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1450

  /* Reset the OC4FE Bit */
  tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
   2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1453

  /* Enable or Disable the Output Compare Fast Bit */
  tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1456

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmr2;
  14:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1457
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC1Ref:

00000000 <TIM_ClearOC1Ref>:
TIM_ClearOC1Ref():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1476

  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1479

  /* Reset the OC1CE Bit */
  tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1482

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr1 |= TIM_OCClear;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1485

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  12:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1486
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_ClearOC2Ref:

00000000 <TIM_ClearOC2Ref>:
TIM_ClearOC2Ref():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1506

  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr1 = TIMx->CCMR1;
   0:	8b03      	ldrh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1509

  /* Reset the OC2CE Bit */
  tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
   2:	ea4f 4343 	mov.w	r3, r3, lsl #17
   6:	ea4f 4353 	mov.w	r3, r3, lsr #17
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1512

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1515

  /* Write to TIMx CCMR1 register */
  TIMx->CCMR1 = tmpccmr1;
  10:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1516
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_ClearOC3Ref:

00000000 <TIM_ClearOC3Ref>:
TIM_ClearOC3Ref():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1535

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1538

  /* Reset the OC3CE Bit */
  tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1541

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr2 |= TIM_OCClear;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1544

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  12:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1545
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_ClearOC4Ref:

00000000 <TIM_ClearOC4Ref>:
TIM_ClearOC4Ref():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1564

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));

  tmpccmr2 = TIMx->CCMR2;
   0:	8b83      	ldrh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1567

  /* Reset the OC4CE Bit */
  tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
   2:	ea4f 4343 	mov.w	r3, r3, lsl #17
   6:	ea4f 4353 	mov.w	r3, r3, lsr #17
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1570

  /* Enable or Disable the Output Compare Clear Bit */
  tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
   a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
   e:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1573

  /* Write to TIMx CCMR2 register */
  TIMx->CCMR2 = tmpccmr2;
  10:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1574
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_OC1PolarityConfig:

00000000 <TIM_OC1PolarityConfig>:
TIM_OC1PolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1593

  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1596

  /* Set or Reset the CC1P Bit */
  tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
   2:	f023 0302 	bic.w	r3, r3, #2
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1597
  tmpccer |= TIM_OCPolarity;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1600

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  12:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1601
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC1NPolarityConfig:

00000000 <TIM_OC1NPolarityConfig>:
TIM_OC1NPolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1619
  uint16_t tmpccer = 0;
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
   
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1622

  /* Set or Reset the CC1NP Bit */
  tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
   2:	f023 0308 	bic.w	r3, r3, #8
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1623
  tmpccer |= TIM_OCNPolarity;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1626

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  12:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1627
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_OC2PolarityConfig:

00000000 <TIM_OC2PolarityConfig>:
TIM_OC2PolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1647

  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1650

  /* Set or Reset the CC2P Bit */
  tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
   2:	f023 0320 	bic.w	r3, r3, #32
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1651
  tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
   e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1654

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  14:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1655
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC2NPolarityConfig:

00000000 <TIM_OC2NPolarityConfig>:
TIM_OC2NPolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1674

  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
  
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1677

  /* Set or Reset the CC2NP Bit */
  tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1678
  tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
   e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1681

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  14:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1682
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC3PolarityConfig:

00000000 <TIM_OC3PolarityConfig>:
TIM_OC3PolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1701

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1704

  /* Set or Reset the CC3P Bit */
  tmpccer &= (uint16_t)~TIM_CCER_CC3P;
   2:	f423 7300 	bic.w	r3, r3, #512	; 0x200
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1705
  tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1708

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  14:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1709
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC3NPolarityConfig:

00000000 <TIM_OC3NPolarityConfig>:
TIM_OC3NPolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1728
 
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
    
  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1731

  /* Set or Reset the CC3NP Bit */
  tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
   2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1732
  tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
   e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1735

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  14:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1736
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_OC4PolarityConfig:

00000000 <TIM_OC4PolarityConfig>:
TIM_OC4PolarityConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1755

  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));

  tmpccer = TIMx->CCER;
   0:	8c03      	ldrh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1758

  /* Set or Reset the CC4P Bit */
  tmpccer &= (uint16_t)~TIM_CCER_CC4P;
   2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1759
  tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
   e:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
  12:	b29b      	uxth	r3, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1762

  /* Write to TIMx CCER register */
  TIMx->CCER = tmpccer;
  14:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1763
}
  16:	4770      	bx	lr

Disassembly of section .text.TIM_CCxCmd:

00000000 <TIM_CCxCmd>:
TIM_CCxCmd():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1779
  * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
  * @retval None
  */
void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
{
   0:	b410      	push	{r4}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1790
  assert_param(IS_TIM_CCX(TIM_CCx));

  tmp = CCER_CCE_SET << TIM_Channel;

  /* Reset the CCxE Bit */
  TIMx->CCER &= (uint16_t)~ tmp;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1787
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
  assert_param(IS_TIM_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCX(TIM_CCx));

  tmp = CCER_CCE_SET << TIM_Channel;
   6:	f04f 0301 	mov.w	r3, #1
   a:	fa03 f301 	lsl.w	r3, r3, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1790

  /* Reset the CCxE Bit */
  TIMx->CCER &= (uint16_t)~ tmp;
   e:	ea24 0303 	bic.w	r3, r4, r3
  12:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1793

  /* Set or reset the CCxE Bit */ 
  TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
  14:	8c03      	ldrh	r3, [r0, #32]
  16:	fa02 f101 	lsl.w	r1, r2, r1
  1a:	ea41 0303 	orr.w	r3, r1, r3
  1e:	b29b      	uxth	r3, r3
  20:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1794
}
  22:	bc10      	pop	{r4}
  24:	4770      	bx	lr
  26:	bf00      	nop

Disassembly of section .text.TIM_CCxNCmd:

00000000 <TIM_CCxNCmd>:
TIM_CCxNCmd():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1809
  * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
  *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
  * @retval None
  */
void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
{
   0:	b410      	push	{r4}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1820
  assert_param(IS_TIM_CCXN(TIM_CCxN));

  tmp = CCER_CCNE_SET << TIM_Channel;

  /* Reset the CCxNE Bit */
  TIMx->CCER &= (uint16_t) ~tmp;
   2:	8c04      	ldrh	r4, [r0, #32]
   4:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1817
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
  assert_param(IS_TIM_CCXN(TIM_CCxN));

  tmp = CCER_CCNE_SET << TIM_Channel;
   6:	f04f 0304 	mov.w	r3, #4
   a:	fa03 f301 	lsl.w	r3, r3, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1820

  /* Reset the CCxNE Bit */
  TIMx->CCER &= (uint16_t) ~tmp;
   e:	ea24 0303 	bic.w	r3, r4, r3
  12:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1823

  /* Set or reset the CCxNE Bit */ 
  TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
  14:	8c03      	ldrh	r3, [r0, #32]
  16:	fa02 f101 	lsl.w	r1, r2, r1
  1a:	ea41 0303 	orr.w	r3, r1, r3
  1e:	b29b      	uxth	r3, r3
  20:	8403      	strh	r3, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1824
}
  22:	bc10      	pop	{r4}
  24:	4770      	bx	lr
  26:	bf00      	nop

Disassembly of section .text.TIM_ICStructInit:

00000000 <TIM_ICStructInit>:
TIM_ICStructInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1949
  * @retval None
  */
void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
{
  /* Set the default configuration */
  TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
   0:	f04f 0300 	mov.w	r3, #0
   4:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1950
  TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
   6:	8043      	strh	r3, [r0, #2]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1951
  TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
   8:	f04f 0201 	mov.w	r2, #1
   c:	8082      	strh	r2, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1952
  TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
   e:	80c3      	strh	r3, [r0, #6]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1953
  TIM_ICInitStruct->TIM_ICFilter = 0x00;
  10:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1954
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture1:

00000000 <TIM_GetCapture1>:
TIM_GetCapture1():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2028
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));

  /* Get the Capture 1 Register value */
  return TIMx->CCR1;
   0:	6b40      	ldr	r0, [r0, #52]	; 0x34
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2029
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture2:

00000000 <TIM_GetCapture2>:
TIM_GetCapture2():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2043
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));

  /* Get the Capture 2 Register value */
  return TIMx->CCR2;
   0:	6b80      	ldr	r0, [r0, #56]	; 0x38
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2044
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture3:

00000000 <TIM_GetCapture3>:
TIM_GetCapture3():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2057
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 

  /* Get the Capture 3 Register value */
  return TIMx->CCR3;
   0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2058
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetCapture4:

00000000 <TIM_GetCapture4>:
TIM_GetCapture4():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2071
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));

  /* Get the Capture 4 Register value */
  return TIMx->CCR4;
   0:	6c00      	ldr	r0, [r0, #64]	; 0x40
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2072
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC1Prescaler:

00000000 <TIM_SetIC1Prescaler>:
TIM_SetIC1Prescaler():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2092
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC1PSC Bits */
  TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
   0:	8b03      	ldrh	r3, [r0, #24]
   2:	f023 030c 	bic.w	r3, r3, #12
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2095

  /* Set the IC1PSC value */
  TIMx->CCMR1 |= TIM_ICPSC;
  10:	8b03      	ldrh	r3, [r0, #24]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2096
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC2Prescaler:

00000000 <TIM_SetIC2Prescaler>:
TIM_SetIC2Prescaler():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2117
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC2PSC Bits */
  TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
   0:	8b03      	ldrh	r3, [r0, #24]
   2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2120

  /* Set the IC2PSC value */
  TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
  10:	8b03      	ldrh	r3, [r0, #24]
  12:	b29b      	uxth	r3, r3
  14:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  18:	b29b      	uxth	r3, r3
  1a:	8303      	strh	r3, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2121
}
  1c:	4770      	bx	lr
  1e:	bf00      	nop

Disassembly of section .text.TIM_PWMIConfig:

00000000 <TIM_PWMIConfig>:
TIM_PWMIConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1966
  * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4605      	mov	r5, r0
   4:	460c      	mov	r4, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1974

  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));

  /* Select the Opposite Input Polarity */
  if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
   6:	8849      	ldrh	r1, [r1, #2]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1976
  {
    icoppositepolarity = TIM_ICPolarity_Falling;
   8:	2900      	cmp	r1, #0
   a:	bf0c      	ite	eq
   c:	2602      	moveq	r6, #2
   e:	2600      	movne	r6, #0
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1983
  else
  {
    icoppositepolarity = TIM_ICPolarity_Rising;
  }
  /* Select the Opposite Input */
  if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
  10:	88a2      	ldrh	r2, [r4, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1985
  {
    icoppositeselection = TIM_ICSelection_IndirectTI;
  12:	2a01      	cmp	r2, #1
  14:	bf14      	ite	ne
  16:	2701      	movne	r7, #1
  18:	2702      	moveq	r7, #2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1991
  }
  else
  {
    icoppositeselection = TIM_ICSelection_DirectTI;
  }
  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
  1a:	8823      	ldrh	r3, [r4, #0]
  1c:	b98b      	cbnz	r3, 42 <TIM_PWMIConfig+0x42>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1994
  {
    /* TI1 Configuration */
    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
  1e:	8923      	ldrh	r3, [r4, #8]
  20:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1997
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  24:	4628      	mov	r0, r5
  26:	88e1      	ldrh	r1, [r4, #6]
  28:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1999
    /* TI2 Configuration */
    TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
  2c:	4628      	mov	r0, r5
  2e:	4631      	mov	r1, r6
  30:	463a      	mov	r2, r7
  32:	8923      	ldrh	r3, [r4, #8]
  34:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2001
    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  38:	4628      	mov	r0, r5
  3a:	88e1      	ldrh	r1, [r4, #6]
  3c:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
  40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2006
  }
  else
  { 
    /* TI2 Configuration */
    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
  42:	8923      	ldrh	r3, [r4, #8]
  44:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2009
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  48:	4628      	mov	r0, r5
  4a:	88e1      	ldrh	r1, [r4, #6]
  4c:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2011
    /* TI1 Configuration */
    TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
  50:	4628      	mov	r0, r5
  52:	4631      	mov	r1, r6
  54:	463a      	mov	r2, r7
  56:	8923      	ldrh	r3, [r4, #8]
  58:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2013
    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  5c:	4628      	mov	r0, r5
  5e:	88e1      	ldrh	r1, [r4, #6]
  60:	f7ff fffe 	bl	0 <TIM_PWMIConfig>
  64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  66:	bf00      	nop

Disassembly of section .text.TIM_SetIC3Prescaler:

00000000 <TIM_SetIC3Prescaler>:
TIM_SetIC3Prescaler():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2141
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC3PSC Bits */
  TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
   0:	8b83      	ldrh	r3, [r0, #28]
   2:	f023 030c 	bic.w	r3, r3, #12
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2144

  /* Set the IC3PSC value */
  TIMx->CCMR2 |= TIM_ICPSC;
  10:	8b83      	ldrh	r3, [r0, #28]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2145
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_SetIC4Prescaler:

00000000 <TIM_SetIC4Prescaler>:
TIM_SetIC4Prescaler():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2165
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));

  /* Reset the IC4PSC Bits */
  TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
   0:	8b83      	ldrh	r3, [r0, #28]
   2:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2168

  /* Set the IC4PSC value */
  TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
  10:	8b83      	ldrh	r3, [r0, #28]
  12:	b29b      	uxth	r3, r3
  14:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
  18:	b29b      	uxth	r3, r3
  1a:	8383      	strh	r3, [r0, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2169
}
  1c:	4770      	bx	lr
  1e:	bf00      	nop

Disassembly of section .text.TIM_ICInit:

00000000 <TIM_ICInit>:
TIM_ICInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1891
  * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
  *         the configuration information for the specified TIM peripheral.
  * @retval None
  */
void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
{
   0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1899
  assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
  assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
  assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
  assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
  
  if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
   6:	880b      	ldrh	r3, [r1, #0]
   8:	b94b      	cbnz	r3, 1e <TIM_ICInit+0x1e>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1902
  {
    /* TI1 Configuration */
    TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
   a:	8849      	ldrh	r1, [r1, #2]
   c:	88aa      	ldrh	r2, [r5, #4]
   e:	892b      	ldrh	r3, [r5, #8]
  10:	f7ff fffe 	bl	0 <TIM_ICInit>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1906
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  14:	4620      	mov	r0, r4
  16:	88e9      	ldrh	r1, [r5, #6]
  18:	f7ff fffe 	bl	0 <TIM_ICInit>
  1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1908
  }
  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
  1e:	2b04      	cmp	r3, #4
  20:	d109      	bne.n	36 <TIM_ICInit+0x36>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1912
  {
    /* TI2 Configuration */
    assert_param(IS_TIM_LIST2_PERIPH(TIMx));
    TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
  22:	8849      	ldrh	r1, [r1, #2]
  24:	88aa      	ldrh	r2, [r5, #4]
  26:	892b      	ldrh	r3, [r5, #8]
  28:	f7ff fffe 	bl	0 <TIM_ICInit>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1916
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  2c:	4620      	mov	r0, r4
  2e:	88e9      	ldrh	r1, [r5, #6]
  30:	f7ff fffe 	bl	0 <TIM_ICInit>
  34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1918
  }
  else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
  36:	2b08      	cmp	r3, #8
  38:	d128      	bne.n	8c <TIM_ICInit+0x8c>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1922
  {
    /* TI3 Configuration */
    assert_param(IS_TIM_LIST3_PERIPH(TIMx));
    TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
  3a:	8848      	ldrh	r0, [r1, #2]
  3c:	888e      	ldrh	r6, [r1, #4]
  3e:	890f      	ldrh	r7, [r1, #8]
TI3_Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3280
                       uint16_t TIM_ICFilter)
{
  uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 3: Reset the CC3E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
  40:	8c21      	ldrh	r1, [r4, #32]
  42:	f421 7180 	bic.w	r1, r1, #256	; 0x100
  46:	ea4f 4101 	mov.w	r1, r1, lsl #16
  4a:	ea4f 4111 	mov.w	r1, r1, lsr #16
  4e:	8421      	strh	r1, [r4, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3281
  tmpccmr2 = TIMx->CCMR2;
  50:	8ba2      	ldrh	r2, [r4, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3282
  tmpccer = TIMx->CCER;
  52:	8c23      	ldrh	r3, [r4, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3286
  tmp = (uint16_t)(TIM_ICPolarity << 8);

  /* Select the Input and set the filter */
  tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
  54:	f022 02f3 	bic.w	r2, r2, #243	; 0xf3
  58:	ea4f 4202 	mov.w	r2, r2, lsl #16
  5c:	ea4f 4212 	mov.w	r2, r2, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3287
  tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
  60:	ea42 1207 	orr.w	r2, r2, r7, lsl #4
  64:	b292      	uxth	r2, r2
  66:	4332      	orrs	r2, r6
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3290

  /* Select the Polarity and set the CC3E Bit */
  tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
  68:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
  6c:	ea4f 4303 	mov.w	r3, r3, lsl #16
  70:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3291
  tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
  74:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  78:	b29b      	uxth	r3, r3
  7a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3294

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
  7e:	83a2      	strh	r2, [r4, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3295
  TIMx->CCER = tmpccer;
  80:	8423      	strh	r3, [r4, #32]
TIM_ICInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1926
    assert_param(IS_TIM_LIST3_PERIPH(TIMx));
    TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  82:	4620      	mov	r0, r4
  84:	88e9      	ldrh	r1, [r5, #6]
  86:	f7ff fffe 	bl	0 <TIM_ICInit>
  8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1932
  }
  else
  {
    /* TI4 Configuration */
    assert_param(IS_TIM_LIST3_PERIPH(TIMx));
    TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
  8c:	8848      	ldrh	r0, [r1, #2]
  8e:	888f      	ldrh	r7, [r1, #4]
  90:	890e      	ldrh	r6, [r1, #8]
TI4_Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3321
                       uint16_t TIM_ICFilter)
{
  uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
  92:	8c21      	ldrh	r1, [r4, #32]
  94:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
  98:	ea4f 4101 	mov.w	r1, r1, lsl #16
  9c:	ea4f 4111 	mov.w	r1, r1, lsr #16
  a0:	8421      	strh	r1, [r4, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3322
  tmpccmr2 = TIMx->CCMR2;
  a2:	8ba2      	ldrh	r2, [r4, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3323
  tmpccer = TIMx->CCER;
  a4:	8c23      	ldrh	r3, [r4, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3327
  tmp = (uint16_t)(TIM_ICPolarity << 12);

  /* Select the Input and set the filter */
  tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
  a6:	f422 7240 	bic.w	r2, r2, #768	; 0x300
  aa:	ea4f 5202 	mov.w	r2, r2, lsl #20
  ae:	ea4f 5212 	mov.w	r2, r2, lsr #20
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3328
  tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
  b2:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3329
  tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
  b6:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  ba:	b292      	uxth	r2, r2
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3332

  /* Select the Polarity and set the CC4E Bit */
  tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
  bc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  c0:	ea4f 4343 	mov.w	r3, r3, lsl #17
  c4:	ea4f 4353 	mov.w	r3, r3, lsr #17
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3333
  tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
  c8:	ea43 3300 	orr.w	r3, r3, r0, lsl #12
  cc:	b29b      	uxth	r3, r3
  ce:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3336

  /* Write to TIMx CCMR2 and CCER registers */
  TIMx->CCMR2 = tmpccmr2;
  d2:	83a2      	strh	r2, [r4, #28]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3337
  TIMx->CCER = tmpccer ;
  d4:	8423      	strh	r3, [r4, #32]
TIM_ICInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:1936
    assert_param(IS_TIM_LIST3_PERIPH(TIMx));
    TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
               TIM_ICInitStruct->TIM_ICSelection,
               TIM_ICInitStruct->TIM_ICFilter);
    /* Set the Input Capture Prescaler value */
    TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
  d6:	4620      	mov	r0, r4
  d8:	88e9      	ldrh	r1, [r5, #6]
  da:	f7ff fffe 	bl	0 <TIM_ICInit>
  de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

Disassembly of section .text.TIM_BDTRConfig:

00000000 <TIM_BDTRConfig>:
TIM_BDTRConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2224
  assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
  assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));

  /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
     the OSSI State, the dead time value and the Automatic Output Enable Bit */
  TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
   0:	884a      	ldrh	r2, [r1, #2]
   2:	880b      	ldrh	r3, [r1, #0]
   4:	ea42 0303 	orr.w	r3, r2, r3
   8:	888a      	ldrh	r2, [r1, #4]
   a:	4313      	orrs	r3, r2
   c:	88ca      	ldrh	r2, [r1, #6]
   e:	4313      	orrs	r3, r2
  10:	890a      	ldrh	r2, [r1, #8]
  12:	4313      	orrs	r3, r2
  14:	894a      	ldrh	r2, [r1, #10]
  16:	4313      	orrs	r3, r2
  18:	898a      	ldrh	r2, [r1, #12]
  1a:	4313      	orrs	r3, r2
  1c:	b29b      	uxth	r3, r3
  1e:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2228
             TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
             TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
             TIM_BDTRInitStruct->TIM_AutomaticOutput;
}
  22:	4770      	bx	lr

Disassembly of section .text.TIM_BDTRStructInit:

00000000 <TIM_BDTRStructInit>:
TIM_BDTRStructInit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2239
  * @retval None
  */
void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
{
  /* Set the default configuration */
  TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
   0:	f04f 0300 	mov.w	r3, #0
   4:	8003      	strh	r3, [r0, #0]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2240
  TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
   6:	8043      	strh	r3, [r0, #2]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2241
  TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
   8:	8083      	strh	r3, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2242
  TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
   a:	80c3      	strh	r3, [r0, #6]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2243
  TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
   c:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2244
  TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
   e:	8143      	strh	r3, [r0, #10]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2245
  TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
  10:	8183      	strh	r3, [r0, #12]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2246
}
  12:	4770      	bx	lr

Disassembly of section .text.TIM_CtrlPWMOutputs:

00000000 <TIM_CtrlPWMOutputs>:
TIM_CtrlPWMOutputs():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2261
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b149      	cbz	r1, 16 <TIM_CtrlPWMOutputs+0x16>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2264
  {
    /* Enable the TIM Main Output */
    TIMx->BDTR |= TIM_BDTR_MOE;
   2:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
   6:	ea6f 4343 	mvn.w	r3, r3, lsl #17
   a:	ea6f 4353 	mvn.w	r3, r3, lsr #17
   e:	b29b      	uxth	r3, r3
  10:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
  14:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2269
  }
  else
  {
    /* Disable the TIM Main Output */
    TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
  16:	f8b0 3044 	ldrh.w	r3, [r0, #68]	; 0x44
  1a:	ea4f 4343 	mov.w	r3, r3, lsl #17
  1e:	ea4f 4353 	mov.w	r3, r3, lsr #17
  22:	f8a0 3044 	strh.w	r3, [r0, #68]	; 0x44
  26:	4770      	bx	lr

Disassembly of section .text.TIM_SelectCOM:

00000000 <TIM_SelectCOM>:
TIM_SelectCOM():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2286
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_SelectCOM+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2289
  {
    /* Set the COM Bit */
    TIMx->CR2 |= TIM_CR2_CCUS;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0304 	orr.w	r3, r3, #4
   a:	8083      	strh	r3, [r0, #4]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2294
  }
  else
  {
    /* Reset the COM Bit */
    TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
   e:	8883      	ldrh	r3, [r0, #4]
  10:	f023 0304 	bic.w	r3, r3, #4
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8083      	strh	r3, [r0, #4]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_CCPreloadControl:

00000000 <TIM_CCPreloadControl>:
TIM_CCPreloadControl():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2310
void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
{ 
  /* Check the parameters */
  assert_param(IS_TIM_LIST4_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_CCPreloadControl+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2313
  {
    /* Set the CCPC Bit */
    TIMx->CR2 |= TIM_CR2_CCPC;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0301 	orr.w	r3, r3, #1
   a:	8083      	strh	r3, [r0, #4]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2318
  }
  else
  {
    /* Reset the CCPC Bit */
    TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
   e:	8883      	ldrh	r3, [r0, #4]
  10:	f023 0301 	bic.w	r3, r3, #1
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8083      	strh	r3, [r0, #4]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_ITConfig:

00000000 <TIM_ITConfig>:
TIM_ITConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2369
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_IT(TIM_IT));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b122      	cbz	r2, c <TIM_ITConfig+0xc>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2372
  {
    /* Enable the Interrupt sources */
    TIMx->DIER |= TIM_IT;
   2:	8983      	ldrh	r3, [r0, #12]
   4:	b29b      	uxth	r3, r3
   6:	4319      	orrs	r1, r3
   8:	8181      	strh	r1, [r0, #12]
   a:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2377
  }
  else
  {
    /* Disable the Interrupt sources */
    TIMx->DIER &= (uint16_t)~TIM_IT;
   c:	8983      	ldrh	r3, [r0, #12]
   e:	b29b      	uxth	r3, r3
  10:	ea23 0101 	bic.w	r1, r3, r1
  14:	8181      	strh	r1, [r0, #12]
  16:	4770      	bx	lr

Disassembly of section .text.TIM_GenerateEvent:

00000000 <TIM_GenerateEvent>:
TIM_GenerateEvent():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2407
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
 
  /* Set the event sources */
  TIMx->EGR = TIM_EventSource;
   0:	8281      	strh	r1, [r0, #20]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2408
}
   2:	4770      	bx	lr

Disassembly of section .text.TIM_GetFlagStatus:

00000000 <TIM_GetFlagStatus>:
TIM_GetFlagStatus():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2441
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_GET_FLAG(TIM_FLAG));

  
  if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
   0:	8a03      	ldrh	r3, [r0, #16]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2443
  {
    bitstatus = SET;
   2:	4219      	tst	r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2450
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.TIM_ClearFlag:

00000000 <TIM_ClearFlag>:
TIM_ClearFlag():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2481
{  
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
   
  /* Clear the flags */
  TIMx->SR = (uint16_t)~TIM_FLAG;
   0:	ea6f 0101 	mvn.w	r1, r1
   4:	b289      	uxth	r1, r1
   6:	8201      	strh	r1, [r0, #16]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2482
}
   8:	4770      	bx	lr
   a:	bf00      	nop

Disassembly of section .text.TIM_GetITStatus:

00000000 <TIM_GetITStatus>:
TIM_GetITStatus():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2511
  uint16_t itstatus = 0x0, itenable = 0x0;
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));
  assert_param(IS_TIM_GET_IT(TIM_IT));
   
  itstatus = TIMx->SR & TIM_IT;
   0:	8a02      	ldrh	r2, [r0, #16]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2513
  
  itenable = TIMx->DIER & TIM_IT;
   2:	8983      	ldrh	r3, [r0, #12]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2514
  if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
   4:	4211      	tst	r1, r2
   6:	bf0c      	ite	eq
   8:	2000      	moveq	r0, #0
   a:	2001      	movne	r0, #1
   c:	4219      	tst	r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2523
  else
  {
    bitstatus = RESET;
  }
  return bitstatus;
}
   e:	bf0c      	ite	eq
  10:	2000      	moveq	r0, #0
  12:	f000 0001 	andne.w	r0, r0, #1
  16:	4770      	bx	lr

Disassembly of section .text.TIM_ClearITPendingBit:

00000000 <TIM_ClearITPendingBit>:
TIM_ClearITPendingBit():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2550
{
  /* Check the parameters */
  assert_param(IS_TIM_ALL_PERIPH(TIMx));

  /* Clear the IT pending Bit */
  TIMx->SR = (uint16_t)~TIM_IT;
   0:	ea6f 0101 	mvn.w	r1, r1
   4:	b289      	uxth	r1, r1
   6:	8201      	strh	r1, [r0, #16]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2551
}
   8:	4770      	bx	lr
   a:	bf00      	nop

Disassembly of section .text.TIM_DMAConfig:

00000000 <TIM_DMAConfig>:
TIM_DMAConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2589
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
  assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));

  /* Set the DMA Base and the DMA Burst Length */
  TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
   0:	430a      	orrs	r2, r1
   2:	f8a0 2048 	strh.w	r2, [r0, #72]	; 0x48
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2590
}
   6:	4770      	bx	lr

Disassembly of section .text.TIM_DMACmd:

00000000 <TIM_DMACmd>:
TIM_DMACmd():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2615
  /* Check the parameters */
  assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
  assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  if (NewState != DISABLE)
   0:	b122      	cbz	r2, c <TIM_DMACmd+0xc>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2618
  {
    /* Enable the DMA sources */
    TIMx->DIER |= TIM_DMASource; 
   2:	8983      	ldrh	r3, [r0, #12]
   4:	b29b      	uxth	r3, r3
   6:	4319      	orrs	r1, r3
   8:	8181      	strh	r1, [r0, #12]
   a:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2623
  }
  else
  {
    /* Disable the DMA sources */
    TIMx->DIER &= (uint16_t)~TIM_DMASource;
   c:	8983      	ldrh	r3, [r0, #12]
   e:	b29b      	uxth	r3, r3
  10:	ea23 0101 	bic.w	r1, r3, r1
  14:	8181      	strh	r1, [r0, #12]
  16:	4770      	bx	lr

Disassembly of section .text.TIM_SelectCCDMA:

00000000 <TIM_SelectCCDMA>:
TIM_SelectCCDMA():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2640
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_SelectCCDMA+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2643
  {
    /* Set the CCDS Bit */
    TIMx->CR2 |= TIM_CR2_CCDS;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0308 	orr.w	r3, r3, #8
   a:	8083      	strh	r3, [r0, #4]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2648
  }
  else
  {
    /* Reset the CCDS Bit */
    TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
   e:	8883      	ldrh	r3, [r0, #4]
  10:	f023 0308 	bic.w	r3, r3, #8
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8083      	strh	r3, [r0, #4]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_InternalClockConfig:

00000000 <TIM_InternalClockConfig>:
TIM_InternalClockConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2679
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));

  /* Disable slave mode to clock the prescaler directly with the internal clock */
  TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0307 	bic.w	r3, r3, #7
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2680
}
  10:	4770      	bx	lr
  12:	bf00      	nop

Disassembly of section .text.TIM_SelectInputTrigger:

00000000 <TIM_SelectInputTrigger>:
TIM_SelectInputTrigger():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2888
  /* Check the parameters */
  assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
  assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   0:	8903      	ldrh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2891

  /* Reset the TS Bits */
  tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2894

  /* Set the Input Trigger source */
  tmpsmcr |= TIM_InputTriggerSource;
   e:	ea41 0303 	orr.w	r3, r1, r3
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2897

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  12:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2898
}
  14:	4770      	bx	lr
  16:	bf00      	nop

Disassembly of section .text.TIM_TIxExternalClockConfig:

00000000 <TIM_TIxExternalClockConfig>:
TIM_TIxExternalClockConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2726
  *          This parameter must be a value between 0x0 and 0xF.
  * @retval None
  */
void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
                                uint16_t TIM_ICPolarity, uint16_t ICFilter)
{
   0:	b538      	push	{r3, r4, r5, lr}
   2:	4604      	mov	r4, r0
   4:	460d      	mov	r5, r1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2733
  assert_param(IS_TIM_LIST1_PERIPH(TIMx));
  assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
  assert_param(IS_TIM_IC_FILTER(ICFilter));

  /* Configure the Timer Input Clock Source */
  if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
   6:	2960      	cmp	r1, #96	; 0x60
   8:	d105      	bne.n	16 <TIM_TIxExternalClockConfig+0x16>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2735
  {
    TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
   a:	4611      	mov	r1, r2
   c:	f04f 0201 	mov.w	r2, #1
  10:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
  14:	e004      	b.n	20 <TIM_TIxExternalClockConfig+0x20>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2739
  }
  else
  {
    TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
  16:	4611      	mov	r1, r2
  18:	f04f 0201 	mov.w	r2, #1
  1c:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2742
  }
  /* Select the Trigger source */
  TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
  20:	4620      	mov	r0, r4
  22:	4629      	mov	r1, r5
  24:	f7ff fffe 	bl	0 <TIM_TIxExternalClockConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2744
  /* Select the External clock mode1 */
  TIMx->SMCR |= TIM_SlaveMode_External1;
  28:	8923      	ldrh	r3, [r4, #8]
  2a:	b29b      	uxth	r3, r3
  2c:	f043 0307 	orr.w	r3, r3, #7
  30:	8123      	strh	r3, [r4, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2745
}
  32:	bd38      	pop	{r3, r4, r5, pc}

Disassembly of section .text.TIM_ITRxExternalClockConfig:

00000000 <TIM_ITRxExternalClockConfig>:
TIM_ITRxExternalClockConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2695
  *            @arg TIM_TS_ITR2: Internal Trigger 2
  *            @arg TIM_TS_ITR3: Internal Trigger 3
  * @retval None
  */
void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2701
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));

  /* Select the Internal Trigger */
  TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
   4:	f7ff fffe 	bl	0 <TIM_ITRxExternalClockConfig>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2704

  /* Select the External clock mode1 */
  TIMx->SMCR |= TIM_SlaveMode_External1;
   8:	8923      	ldrh	r3, [r4, #8]
   a:	b29b      	uxth	r3, r3
   c:	f043 0307 	orr.w	r3, r3, #7
  10:	8123      	strh	r3, [r4, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2705
}
  12:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_SelectOutputTrigger:

00000000 <TIM_SelectOutputTrigger>:
TIM_SelectOutputTrigger():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2929
  /* Check the parameters */
  assert_param(IS_TIM_LIST5_PERIPH(TIMx));
  assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));

  /* Reset the MMS Bits */
  TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
   0:	8883      	ldrh	r3, [r0, #4]
   2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8083      	strh	r3, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2931
  /* Select the TRGO source */
  TIMx->CR2 |=  TIM_TRGOSource;
  10:	8883      	ldrh	r3, [r0, #4]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8083      	strh	r3, [r0, #4]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2932
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_SelectSlaveMode:

00000000 <TIM_SelectSlaveMode>:
TIM_SelectSlaveMode():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2953
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));

  /* Reset the SMS Bits */
  TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0307 	bic.w	r3, r3, #7
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2956

  /* Select the Slave Mode */
  TIMx->SMCR |= TIM_SlaveMode;
  10:	8903      	ldrh	r3, [r0, #8]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2957
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_SelectMasterSlaveMode:

00000000 <TIM_SelectMasterSlaveMode>:
TIM_SelectMasterSlaveMode():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2976
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));

  /* Reset the MSM Bit */
  TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
   0:	8903      	ldrh	r3, [r0, #8]
   2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
   6:	ea4f 4303 	mov.w	r3, r3, lsl #16
   a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   e:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2979
  
  /* Set or Reset the MSM Bit */
  TIMx->SMCR |= TIM_MasterSlaveMode;
  10:	8903      	ldrh	r3, [r0, #8]
  12:	b29b      	uxth	r3, r3
  14:	ea41 0303 	orr.w	r3, r1, r3
  18:	8103      	strh	r3, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2980
}
  1a:	4770      	bx	lr

Disassembly of section .text.TIM_ETRConfig:

00000000 <TIM_ETRConfig>:
TIM_ETRConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3001
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
                   uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
{
   0:	b410      	push	{r4}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3010
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));

  tmpsmcr = TIMx->SMCR;
   2:	8904      	ldrh	r4, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3013

  /* Reset the ETR Bits */
  tmpsmcr &= SMCR_ETR_MASK;
   4:	b2e4      	uxtb	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3016

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilter << (uint16_t)8)));
   6:	ea41 0404 	orr.w	r4, r1, r4
   a:	ea42 0404 	orr.w	r4, r2, r4
   e:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
  12:	b2a4      	uxth	r4, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3019

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  14:	8104      	strh	r4, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3020
}
  16:	bc10      	pop	{r4}
  18:	4770      	bx	lr
  1a:	bf00      	nop

Disassembly of section .text.TIM_ETRClockMode2Config:

00000000 <TIM_ETRClockMode2Config>:
TIM_ETRClockMode2Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2813
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2821
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));

  /* Configure the ETR Clock source */
  TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
   4:	f7ff fffe 	bl	0 <TIM_ETRClockMode2Config>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2824

  /* Enable the External clock mode2 */
  TIMx->SMCR |= TIM_SMCR_ECE;
   8:	8923      	ldrh	r3, [r4, #8]
   a:	b29b      	uxth	r3, r3
   c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
  10:	8123      	strh	r3, [r4, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2825
}
  12:	bd10      	pop	{r4, pc}

Disassembly of section .text.TIM_ETRClockMode1Config:

00000000 <TIM_ETRClockMode1Config>:
TIM_ETRClockMode1Config():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2766
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
                            uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
{
   0:	b510      	push	{r4, lr}
   2:	4604      	mov	r4, r0
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2775
  assert_param(IS_TIM_LIST3_PERIPH(TIMx));
  assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
  assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
  assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
  /* Configure the ETR Clock source */
  TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
   4:	f7ff fffe 	bl	0 <TIM_ETRClockMode1Config>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2778
  
  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   8:	8923      	ldrh	r3, [r4, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2784

  /* Reset the SMS Bits */
  tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;

  /* Select the External clock mode1 */
  tmpsmcr |= TIM_SlaveMode_External1;
   a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
   e:	ea4f 4303 	mov.w	r3, r3, lsl #16
  12:	ea4f 4313 	mov.w	r3, r3, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2788

  /* Select the Trigger selection : ETRF */
  tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
  tmpsmcr |= TIM_TS_ETRF;
  16:	f043 0377 	orr.w	r3, r3, #119	; 0x77
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2791

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  1a:	8123      	strh	r3, [r4, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:2792
}
  1c:	bd10      	pop	{r4, pc}
  1e:	bf00      	nop

Disassembly of section .text.TIM_EncoderInterfaceConfig:

00000000 <TIM_EncoderInterfaceConfig>:
TIM_EncoderInterfaceConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3059
  *            @arg TIM_ICPolarity_Rising: IC Rising edge.
  * @retval None
  */
void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
                                uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
{
   0:	b470      	push	{r4, r5, r6}
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3071
  assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
  assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
  assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
   2:	8904      	ldrh	r4, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3074

  /* Get the TIMx CCMR1 register value */
  tmpccmr1 = TIMx->CCMR1;
   4:	8b06      	ldrh	r6, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3077

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
   6:	8c05      	ldrh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3080

  /* Set the encoder Mode */
  tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
   8:	f024 0407 	bic.w	r4, r4, #7
   c:	ea4f 4404 	mov.w	r4, r4, lsl #16
  10:	ea4f 4414 	mov.w	r4, r4, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3081
  tmpsmcr |= TIM_EncoderMode;
  14:	4321      	orrs	r1, r4
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3084

  /* Select the Capture Compare 1 and the Capture Compare 2 as input */
  tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
  16:	f426 7640 	bic.w	r6, r6, #768	; 0x300
  1a:	f026 0603 	bic.w	r6, r6, #3
  1e:	ea4f 4606 	mov.w	r6, r6, lsl #16
  22:	ea4f 4616 	mov.w	r6, r6, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3085
  tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
  26:	f446 7680 	orr.w	r6, r6, #256	; 0x100
  2a:	f046 0601 	orr.w	r6, r6, #1
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3088

  /* Set the TI1 and the TI2 Polarities */
  tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
  2e:	f025 0522 	bic.w	r5, r5, #34	; 0x22
  32:	ea4f 4505 	mov.w	r5, r5, lsl #16
  36:	ea4f 4515 	mov.w	r5, r5, lsr #16
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3089
  tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
  3a:	ea42 0505 	orr.w	r5, r2, r5
  3e:	ea45 1503 	orr.w	r5, r5, r3, lsl #4
  42:	b2ad      	uxth	r5, r5
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3092

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
  44:	8101      	strh	r1, [r0, #8]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3095

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmr1;
  46:	8306      	strh	r6, [r0, #24]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3098

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
  48:	8405      	strh	r5, [r0, #32]
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3099
}
  4a:	bc70      	pop	{r4, r5, r6}
  4c:	4770      	bx	lr
  4e:	bf00      	nop

Disassembly of section .text.TIM_SelectHallSensor:

00000000 <TIM_SelectHallSensor>:
TIM_SelectHallSensor():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3115
{
  /* Check the parameters */
  assert_param(IS_TIM_LIST2_PERIPH(TIMx));
  assert_param(IS_FUNCTIONAL_STATE(NewState));

  if (NewState != DISABLE)
   0:	b129      	cbz	r1, e <TIM_SelectHallSensor+0xe>
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3118
  {
    /* Set the TI1S Bit */
    TIMx->CR2 |= TIM_CR2_TI1S;
   2:	8883      	ldrh	r3, [r0, #4]
   4:	b29b      	uxth	r3, r3
   6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
   a:	8083      	strh	r3, [r0, #4]
   c:	4770      	bx	lr
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3123
  }
  else
  {
    /* Reset the TI1S Bit */
    TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
   e:	8883      	ldrh	r3, [r0, #4]
  10:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  14:	ea4f 4303 	mov.w	r3, r3, lsl #16
  18:	ea4f 4313 	mov.w	r3, r3, lsr #16
  1c:	8083      	strh	r3, [r0, #4]
  1e:	4770      	bx	lr

Disassembly of section .text.TIM_RemapConfig:

00000000 <TIM_RemapConfig>:
TIM_RemapConfig():
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3167
 /* Check the parameters */
  assert_param(IS_TIM_LIST6_PERIPH(TIMx));
  assert_param(IS_TIM_REMAP(TIM_Remap));

  /* Set the Timer remapping configuration */
  TIMx->OR =  TIM_Remap;
   0:	f8a0 1050 	strh.w	r1, [r0, #80]	; 0x50
D:\FbEdit\Projects\Applications\fbe\STM32F4Discovery\STM32F4_LCMeter/stm32f4xx_tim.c:3168
}
   4:	4770      	bx	lr
   6:	bf00      	nop
