Poor mans navigation system.
----------------------------

Navigation systems to use in a boat is very expensive if you want a decent screen size and a nice user interface.
Example: GPSMAP® 720/720s https://buy.garmin.com/shop/shop.do?pID=37719#specsTab
In addition I would need a svinger for the sonar and a map covering my area, an additional $400 or so.
Total cost: $1800

For me the solution is obvious: Buy a cheap chart plotter / sonar and hook it up with a small cheap netbook via a RS232 to USB converter. And then make a chart plotter program.

Cuda 350 chart plotter / sonar, svinger included: http://www.cabelas.com/p-0065672020560a.shtml
I could probably get a cheap netbook for around $250, and a RS232 to USB for $20.
The maps I can grab for free.
Total cost: $480

Actually this is both cheaper and a better solution for me as I will bring the netbook with me and dont have to sit in my boat to do trip planning and plot waypoints.

The Cuda sends GPS data using the NMEA 0183 protocol: http://www.tronico.fi/OH6NT/docs/NMEA0183.pdf
Longitude, Latitude is WGS 84, Degrees, Minutes and fractions of a minute. In my program I convert it to degrees and fractions of a degree and then convert it to an integer
by ignoring the decimal point. The number of decimals is constant.

So far so good. But I ran into problems when trying to figure out how to calculate the distance between two Longitude, Latitude coordinates.
My math skills are really getting rusty.

I found this on Wikipedia: http://en.wikipedia.org/wiki/Great-circle_distance
Looking at the 'distance between two airports' example.
The degrees to radians part is easy, but the second formula is Greek to me.

Does anyone know what this formula means, example please?

Currently I assume the earth is flat (back to the middelages), but uses coordinates of the nearest place to reduce the error.

You can get what I have so far here: https://fbedit.svn.sourceforge.net/svnroot/fbedit/RadASM30/Release/Masm/Projects/ShowMap/ShowMap.zip
Note that the map tiles has been blured as they are copyrighted material.
Use the Trip Log / Replay Trip to see me race around my neighbourhood with my car. Actually the replay is x10 so I am not driving very fast. The speed shown is in knots.

If there is any interest in this project I will post the sources when I am done.

KetilO

Spherical law of cosines: d = acos(sin(lat1).sin(lat2)+cos(lat1).cos(lat2).cos(long2-long1)).R
R = earth’s radius (mean radius = 6,371km)

From minor28
y = a*ln(tan(45deg + latitude/2deg))
where a is semi-major axis = 6,378,137m

y=a*ln[tan(lat/2+PI/4)]

Map top left
66.53365,12.91296

Final solution.
===============
The Cuda 350 is no longer needed, only the swinger is used. A sonar with a GPS module has been constructed.

Sonar Description
=================
A short ping at 200 KHz is transmitted at intervals depending on depth range (200 to 800 ms).
From the time it takes for the echo to return we can calculate the depth.
The ADC measures the strenght of the echo at intervalls depending on range
and stores it in a 512 byte array.

Speed of sound in water
=======================
Temp (C)    Speed (m/s)
  0             1403
  5             1427
 10             1447
 20             1481
 30             1507
 40             1526

1450 m/s is probably a good estimate.
Time for sound to travel 100 cm: 1000000 / 1450 = 689,66 ~ 690 us
Since it is the echo we are measuring: 690 * 2 = 1380 us

Two timers are needed:
1. Timer1 generates the 200 KHz two phase none overlapping clock ping signal.
   The number of pulses is variable (0 to 255). When the ping is done Timer 2 is enabled.
2. Timer2 generates an interrupt for every pixel (index in echo array). The interval depends on selected range.
   The interrupt routine increments the index of the 512 byte echo array and at the same time it updates the
   DAC gain control. In the main loop the echo ADC is read and the largest result is stored in the echo array
   at current index. This method allows me to use a simple diode AM demodulator in the receiver.

Time needed for the different ranges:
=======================================================================================================================
Range		Time for echo to return		Pixel time					cm / Pixel						Pixel Timer (40MHz)
=======================================================================================================================
  2 m		1380 *   2 =   2760 us		  2760 / 512 =    5,4 us	   5,4 / 1380 * 100 =  0,39 cm		  215
  4 m		1380 *   4 =   5520 us		  5520 / 512 =   10,8 us	  10,8 / 1380 * 100 =  0,78 cm		  430
  6 m		1380 *   6 =   8280 us		  8280 / 512 =   16,1 us	  16,1 / 1380 * 100 =  1.17 cm		  646
  8 m		1380 *   8 =  11040 us		  8280 / 512 =   21,6 us	  21,6 / 1380 * 100 =  1.56 cm		  861
 10 m		1380 *  10 =  13800 us		 13800 / 512 =   27,0 us	  27,0 / 1380 * 100 =  1.96 cm		 1077
 14 m		1380 *  14 =  19320 us		 19320 / 512 =   37,7 us	  37,7 / 1380 * 100 =  2,73 cm		 1508
 20 m		1380 *  20 =  27600 us		 27600 / 512 =   53,9 us	  53,9 / 1380 * 100 =  3,91 cm		 2154
 30 m		1380 *  30 =  41400 us		 41400 / 512 =   80,0 us	  80,0 / 1380 * 100 =  5,80 cm		 3232
 40 m		1380 *  40 =  55200 us		 55200 / 512 =  107,8 us	 107,8 / 1380 * 100 =  7,81 cm		 4309
 50 m		1380 *  50 =  69000 us		 69000 / 512 =  134,8 us	 134,8 / 1380 * 100 =  9,77 cm		 5387
 70 m		1380 *  70 =  96600 us		 96600 / 512 =  188,7 us	 188,7 / 1380 * 100 = 13,67 cm		 7542
100 m		1380 * 100 = 138000 us		138000 / 512 =  269,5 us	 269,5 / 1380 * 100 = 19,53 cm		10775
120 m		1380 * 120 = 165600 us		165600 / 512 =  323,4 us	 323,4 / 1380 * 100 = 23,44 cm		12930
150 m		1380 * 150 = 207000 us		207000 / 512 =  404,3 us	 404,3 / 1380 * 100 = 29,30 cm		16163
200 m		1380 * 200 = 276000 us		276000 / 512 =  539,1 us	 539,1 / 1380 * 100 = 39,07 cm		21551
250 m		1380 * 250 = 345000 us		345000 / 512 =  673,8 us	 673,8 / 1380 * 100 = 48,83 cm		26939
300 m		1380 * 300 = 414000 us		414000 / 512 =  808,6 us	 808,6 / 1380 * 100 = 58,59 cm		32327
350 m		1380 * 350 = 483000 us		483000 / 512 =  943,4 us	 943,4 / 1380 * 100 = 68,36 cm		37715
400 m		1380 * 400 = 552000 us		552000 / 512 = 1078,1 us	1078,1 / 1380 * 100 = 78,13 cm		43102
500 m		1380 * 500 = 690000 us		690000 / 512 = 1347,7 us	1347,7 / 1380 * 100 = 97,66 cm		53878
=======================================================================================================================

Hardware environment
====================
Runs on STM32 valuline Discovery. The Discovery is perfect for this job. It's cheap and has all the pheriperals
needed. 8K ram, USB, IO's, ADC, DAC, USART and timers.
The Discovery operates as a thin server and the STLink USB connection is used to transfer data to the PC.

Additional hardware
===================
o Transmitter capable of delivering at least 150 watts RMS to the swinger.
  For the swinger I am using (Lowrance HST-WSU Part #106-48), 1000 Vpp is needed.
o Echo receiver tuned at 200KHz and with time dependant gain control (controled by DAC).

Port pins used on STM32 Discovery
=================================
PA1		Ping phase 0 out
PA2		Ping phase 1 out

PA3		ADC Echo in, ADC_Channel_3
PA4		DAC channel1 Gain control out
PA5		DAC channel2 Trim control out
PA6		ADC Water temprature in, ADC_Channel_6
PA7		ADC Air temprature in, ADC_Channel_7
PB0		200 KHz Setup signal
PC4		ADC Battery in, ADC_Channel_14

PA9   	USART1 TX, GPS Configuration
PA10  	USART1 RX, GPS Data

Transmitter transformer
=======================
Primary 4+4 turns and secondary 200 turns on an 7.5mm square core.
The secondary is wound in 4 layers, each layer insulated with tape.

Receiver transformers
=====================
455KHz IF transformers, Toko type 7P core (http://www.toko.com.hk/Catalog/coils/7p.pdf).

T1		796 KHz IF transformer, Toko type 7P orange IF coil.
T2		455 KHz IF transformer, Toko type 7P yellow IF coil.
T3		455 KHz IF transformer, Toko type 7P white IF coil.

Some specifications on Mouser 455KHz IF transformers
====================================================

Mouser 455 Khz IF transformers
========================================================================================================================
Mouser Number Impedance Application Slug Colour Turns Ratio Nominal Inductance Turns [1 - 2] Turns [2 - 3] Turns [4 - 6] 
========================================================================================================================
42IF101		  60K : 600 1st I.F		Yellow Type	22 : 1		680 uH			   70			 87			   7
42IF301		  50K : 500 1st I.F		Yellow Type	20 : 1		680 uH			   77			 66			   7
42IF102		  30K : 500 2nd I.F		White Type	22 : 1		680 uH			   98			 57			   7
42IF302		  30K : 500 2nd I.F		White Type	22 : 1		680 uH			   95			 48			   7
42IF103		  20K : 6K  3rd I.F		Black Type	 6 : 1		680 uH			   103			 50			   27
42IF303		  20K : 5K  3rd I.F		Black Type	 7 : 1		680 uH			   102			 41			   21
========================================================================================================================

3	o---+---C | C---o	4
	 C ==	C | C
2	o--|----C | C
	   |	C | C
1	o--+----C | C---o	6

1 - Collector
2 - Vcc
4 - Base
6 - Gnd

LC Calculation
==============
		  1
f = -------------
    2*pi*Sqr(L*C)


Might be useful reading
=======================
IF stage:			http://www.qrp.pops.net/Cascode_BJT.asp
AM/FM radio:		http://electronickits.com/kit/complete/radi/amfm-108k.pdf
IF transformers:	http://www.electronics-tutorials.com/filters/if-amplifier-transformers.htm
IF amplifier IC:	MC1350 if amplifier
VCA:				http://schematicsforfree.com/archive/file/Audio/Circuits/Dynamics%20&%20Gain%20Control/Voltage%20Controlled%20Amplifiers.pdf
Toko IF colils:		http://www.toko.com.hk/Catalog/coils/7p.pdf
Mouser IF coils:	http://www.mouser.com/catalog/specsheets/XC-600131.pdf
Hybrid IF:			http://www.ka7exm.net/hycas/hycas_200712_qst.pdf
JFET:				http://www.w7zoi.net/jfet101.pdf

Receiver sensivity for a full
scale reading:
=============================
Input voltage	   Gain level
=============================
1000mV					  533
 500mV					  602
 200mV					  695
 100mV					  730
  50mV					  760
  20mV					  804
  10mV					  836
   5mV					  889
   2mV					  990
1000uV					 1146
 500uV					 1324
 200uV					 1690
 100uV					 2046
  50uV					 2598
  20uV					 3700
  15uV					 4095
=============================

Gain levels Ping 64
=============================
Range			Single bottom
=============================
 2						  750
 4						  820
 6						  840
 8						  860
10						  910
14						  980
20						 1250
30						 1280
40						 1400
50						 1960
=============================

Gain levels Ping 128
=============================
Range			Single bottom
=============================
 70						 2630
100						 3280
=============================

Water temprature readings
=============================
Temprature		  ADC Reading
=============================
18.8					  835
 0.0					 1750
=============================

Air temprature readings
=============================
Temprature		  ADC Reading
=============================
23.5					1165
 0.0					2485
=============================

Lowrance HST-WSU Transducer
===========================
No data can be found on the internet for this transducer.
Some of the data (resonant, anti-resonant, and impedance characteristics)
can be found using a signal generator, oscilloscope, ohm meter and a 1K variable resistor.

Below resonant frequency the pizzo ceramic element acts as a capacitor.
At resonant frequency the pizzo ceramic element acts as a resistor.
Abowe resonant frequency the pizzo ceramic element acts as an inductor.

http://airmartechnology.com/uploads/AirPDF/App_Notes.pdf

EM406a Version
==============
$PSRFTXT,Version:GSW3.5.0_3.5.00.00-3EP2.01 *46
$PSRFTXT,Version2:F-GPS-03-1006232*29

